[tool.poetry]
name = "formkit-ninja"
version = "0.7.2"
description = "A Django-Ninja backend to specify FormKit schemas"
authors = ["Josh Brooks <josh@catalpa.io>"]
license = "GPLv3"
readme = "README.md"
homepage = "https://github.com/catalpainternational/formkit-ninja"
repository = "https://github.com/catalpainternational/formkit-ninja"
packages = [{include = "formkit_ninja"}]
exclude = ["tests", "formkit_ninja/samples"]

[tool.poetry.dependencies]
python = "^3.10"
django-ninja = "^0.21"
Django = "^4"
pydantic = "<2"
django-stubs = {extras = ["compatible-mypy"], version = "^4.2.3"}
django-pgtrigger = "^4.7.0"

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
pytest = "*"
pytest-django = "*"
isort = "*"
black = "*"
flake8 = "*"
django-extensions = "*"
rich = "*"
sqlparse = "*"
mypy = "*"
pre-commit = "*"
playwright = "*"
pytest-playwright = "*"
mkdocs-material = "*"
mkdocstrings = {extras = ["python"], version = "*"}
pytest-cov = "^4.1.0"
psycopg2-binary = "^2.9.7"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pylint.format]
max-line-length = "119"

[tool.isort]
profile = 'black'
line_length = 119
multi_line_output = 3
include_trailing_comma = true

[tool.black]
line-length = 119
target-version = ['py310']